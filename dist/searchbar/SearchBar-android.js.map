{"version":3,"sources":["../../src/searchbar/SearchBar-android.js"],"names":["SCREEN_WIDTH","get","width","ANDROID_GRAY","SearchBar","props","focus","input","blur","clear","onChangeText","onClearText","cancel","onCancel","onFocus","setState","hasFocus","onBlur","text","isEmpty","state","clearIcon","containerStyle","leftIcon","leftIconContainerStyle","rightIconContainerStyle","inputStyle","noIcon","showLoading","loadingProps","attributes","loadingStyle","style","otherLoadingProps","searchIcon","styles","container","inputContainer","undefined","flexDirection","marginRight","propTypes","bool","object","func","defaultProps","create","backgroundColor","paddingTop","paddingBottom","flex","marginLeft","borderBottomWidth"],"mappings":"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","file":"SearchBar-android.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Dimensions,\r\n  StyleSheet,\r\n  View,\r\n  ActivityIndicator,\r\n  Text,\r\n} from 'react-native';\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\nimport Input from '../input/Input';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst ANDROID_GRAY = 'rgba(0, 0, 0, 0.54)';\r\n\r\nclass SearchBar extends Component {\r\n  focus = () => {\r\n    this.input.focus();\r\n  };\r\n\r\n  blur = () => {\r\n    this.input.blur();\r\n  };\r\n\r\n  clear = () => {\r\n    this.input.clear();\r\n    this.onChangeText('');\r\n    this.props.onClearText();\r\n  };\r\n\r\n  cancel = () => {\r\n    this.blur();\r\n    this.props.onCancel();\r\n  };\r\n\r\n  onFocus = () => {\r\n    this.props.onFocus();\r\n    this.setState({ hasFocus: true });\r\n  };\r\n\r\n  onBlur = () => {\r\n    this.props.onBlur();\r\n    this.setState({ hasFocus: false });\r\n  };\r\n\r\n  onChangeText = text => {\r\n    this.props.onChangeText(text);\r\n    this.setState({ isEmpty: text === '' });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasFocus: false,\r\n      isEmpty: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      clearIcon,\r\n      containerStyle,\r\n      leftIcon,\r\n      leftIconContainerStyle,\r\n      rightIconContainerStyle,\r\n      inputStyle,\r\n      noIcon,\r\n      showLoading,\r\n      loadingProps,\r\n      ...attributes\r\n    } = this.props;\r\n    const { hasFocus, isEmpty } = this.state;\r\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\r\n    const searchIcon = (\r\n      <MaterialIcon\r\n        size={25}\r\n        color={ANDROID_GRAY}\r\n        name={hasFocus ? 'arrow-left' : 'magnify'}\r\n        onPress={hasFocus ? this.cancel : null}\r\n      />\r\n    );\r\n    return (\r\n      <View style={styles.container}>\r\n        <Input\r\n          {...attributes}\r\n          onFocus={this.onFocus}\r\n          onBlur={this.onBlur}\r\n          onChangeText={this.onChangeText}\r\n          ref={input => (this.input = input)}\r\n          inputStyle={[styles.input, inputStyle]}\r\n          containerStyle={[styles.inputContainer, containerStyle]}\r\n          leftIcon={noIcon ? undefined : leftIcon ? leftIcon : searchIcon}\r\n          leftIconContainerStyle={[\r\n            styles.leftIconContainerStyle,\r\n            leftIconContainerStyle,\r\n          ]}\r\n          rightIcon={\r\n            <View style={{ flexDirection: 'row' }}>\r\n              {showLoading && (\r\n                <ActivityIndicator\r\n                  style={[\r\n                    clearIcon && !isEmpty && { marginRight: 10 },\r\n                    loadingStyle,\r\n                  ]}\r\n                  {...otherLoadingProps}\r\n                />\r\n              )}\r\n              {clearIcon &&\r\n                !isEmpty && (\r\n                  <MaterialIcon\r\n                    name={'close'}\r\n                    size={25}\r\n                    color={ANDROID_GRAY}\r\n                    onPress={() => this.clear()}\r\n                  />\r\n                )}\r\n            </View>\r\n          }\r\n          rightIconContainerStyle={[\r\n            styles.rightIconContainerStyle,\r\n            rightIconContainerStyle,\r\n          ]}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  clearIcon: PropTypes.bool,\r\n  loadingProps: PropTypes.object,\r\n  noIcon: PropTypes.bool,\r\n  showLoading: PropTypes.bool,\r\n  containerStyle: ViewPropTypes.style,\r\n  leftIcon: PropTypes.object,\r\n  leftIconContainerStyle: ViewPropTypes.style,\r\n  rightIconContainerStyle: ViewPropTypes.style,\r\n  inputStyle: Text.propTypes.style,\r\n  onClearText: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  onChangeText: PropTypes.func,\r\n};\r\n\r\nSearchBar.defaultProps = {\r\n  clearIcon: true,\r\n  loadingProps: {},\r\n  noIcon: false,\r\n  showLoading: false,\r\n  onClearText: () => null,\r\n  onCancel: () => null,\r\n  onFocus: () => null,\r\n  onBlur: () => null,\r\n  onChangeText: () => null,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n    width: SCREEN_WIDTH,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    marginLeft: 24,\r\n    marginRight: 8,\r\n  },\r\n  inputContainer: {\r\n    borderBottomWidth: 0,\r\n    width: SCREEN_WIDTH,\r\n  },\r\n  rightIconContainerStyle: {\r\n    marginRight: 8,\r\n  },\r\n  leftIconContainerStyle: {\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nexport default SearchBar;\r\n"]}