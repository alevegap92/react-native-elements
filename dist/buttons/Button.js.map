{"version":3,"sources":["../../src/buttons/Button.js"],"names":["log","console","Button","props","linearGradientProps","ViewComponent","error","TouchableComponent","containerStyle","onPress","buttonStyle","clear","loading","loadingStyle","loadingProps","text","textStyle","textProps","icon","iconContainerStyle","iconRight","attributes","styles","container","undefined","borderRadius","button","backgroundColor","select","android","zero","web","color","size","iconContainer","propTypes","string","style","object","bool","any","defaultProps","OS","create","justifyContent","alignItems","flexDirection","primary","four","two","padding","fontSize","textAlign","ios","fontWeight","marginHorizontal"],"mappings":"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","file":"Button.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Platform,\r\n} from 'react-native';\r\nimport colors from '../config/colors';\r\n\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\nimport elevation from '../config/elevation';\r\n\r\nconst log = () => {\r\n  /* eslint-disable no-console */\r\n  console.log('Please attach a method to this component');\r\n};\r\nclass Button extends Component {\r\n  componentDidMount() {\r\n    if (\r\n      this.props.linearGradientProps != null &&\r\n      this.props.ViewComponent == null\r\n    ) {\r\n      /* eslint-disable no-console */\r\n      console.error(\r\n        `You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('expo').LinearGradient}`\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ViewComponent,\r\n      TouchableComponent,\r\n      containerStyle,\r\n      onPress,\r\n      buttonStyle,\r\n      clear,\r\n      loading,\r\n      loadingStyle,\r\n      loadingProps,\r\n      text,\r\n      textStyle,\r\n      textProps,\r\n      icon,\r\n      iconContainerStyle,\r\n      iconRight,\r\n      linearGradientProps,\r\n      ...attributes\r\n    } = this.props;\r\n\r\n    return (\r\n      <View style={[styles.container, containerStyle]}>\r\n        <TouchableComponent\r\n          onPress={onPress}\r\n          activeOpacity={clear ? 0 : undefined}\r\n          style={{\r\n            borderRadius: buttonStyle.borderRadius,\r\n          }}\r\n          {...attributes}\r\n        >\r\n          <ViewComponent\r\n            {...linearGradientProps}\r\n            style={[\r\n              styles.button,\r\n              clear && {\r\n                backgroundColor: 'transparent',\r\n                ...Platform.select({\r\n                  android: elevation.android.zero,\r\n                  web: elevation.web.zero,\r\n                }),\r\n              },\r\n              buttonStyle,\r\n              linearGradientProps && { backgroundColor: 'transparent' },\r\n            ]}\r\n          >\r\n            {loading && (\r\n              <ActivityIndicator\r\n                animating={true}\r\n                style={[styles.loading, loadingStyle]}\r\n                color={loadingProps.color}\r\n                size={loadingProps.size}\r\n                {...loadingProps}\r\n              />\r\n            )}\r\n            {!loading &&\r\n              icon &&\r\n              !iconRight && (\r\n                <View style={[styles.iconContainer, iconContainerStyle]}>\r\n                  {icon}\r\n                </View>\r\n              )}\r\n            {!loading && (\r\n              <Text style={[styles.text, textStyle]} {...textProps}>\r\n                {text}\r\n              </Text>\r\n            )}\r\n            {!loading &&\r\n              icon &&\r\n              iconRight && (\r\n                <View style={[styles.iconContainer, iconContainerStyle]}>\r\n                  {icon}\r\n                </View>\r\n              )}\r\n          </ViewComponent>\r\n        </TouchableComponent>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  textStyle: Text.propTypes.style,\r\n  textProps: PropTypes.object,\r\n  buttonStyle: ViewPropTypes.style,\r\n  clear: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  loadingStyle: ViewPropTypes.style,\r\n  loadingProps: PropTypes.object,\r\n  onPress: PropTypes.any,\r\n  containerStyle: ViewPropTypes.style,\r\n  icon: PropTypes.object,\r\n  iconContainerStyle: ViewPropTypes.style,\r\n  iconRight: PropTypes.bool,\r\n  linearGradientProps: PropTypes.object,\r\n  TouchableComponent: PropTypes.any,\r\n  ViewComponent: PropTypes.any,\r\n};\r\n\r\nButton.defaultProps = {\r\n  iconRight: false,\r\n  TouchableComponent:\r\n    Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity,\r\n  ViewComponent: View,\r\n  onPress: log,\r\n  clear: false,\r\n  loadingProps: {\r\n    color: 'white',\r\n    size: 'small',\r\n  },\r\n  buttonStyle: {\r\n    borderRadius: 3,\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 3,\r\n    backgroundColor: colors.primary,\r\n    ...Platform.select({\r\n      android: {\r\n        ...elevation.android.four,\r\n        borderRadius: 2,\r\n      },\r\n      web: {\r\n        ...elevation.web.two,\r\n      },\r\n    }),\r\n  },\r\n  loading: {\r\n    padding: 8,\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    padding: 8,\r\n    ...Platform.select({\r\n      ios: {\r\n        fontSize: 18,\r\n      },\r\n      android: {\r\n        fontWeight: '500',\r\n      },\r\n    }),\r\n  },\r\n  iconContainer: {\r\n    marginHorizontal: 5,\r\n  },\r\n});\r\n\r\nexport default Button;\r\n"]}