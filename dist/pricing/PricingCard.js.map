{"version":3,"sources":["../../src/pricing/PricingCard.js"],"names":["PricingCard","containerStyle","props","wrapperStyle","title","price","info","button","color","titleFont","pricingFont","infoFont","buttonFont","onButtonPress","attributes","styles","container","wrapper","pricingTitle","fontFamily","pricingPrice","map","item","i","pricingInfo","buttonStyle","backgroundColor","icon","propTypes","style","string","isRequired","oneOfType","number","array","object","any","defaultProps","primary","create","margin","marginBottom","borderColor","grey5","borderWidth","padding","select","ios","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","android","one","web","textAlign","fontSize","fontWeight","black","marginTop","bold","grey3"],"mappings":"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","file":"PricingCard.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { View, StyleSheet, Platform } from 'react-native';\r\nimport Text from '../text/Text';\r\nimport fonts from '../config/fonts';\r\nimport colors from '../config/colors';\r\nimport Button from '../buttons/Button';\r\nimport Icon from '../icons/Icon';\r\nimport normalize from '../helpers/normalizeText';\r\nimport elevation from '../config/elevation';\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\n\r\nconst PricingCard = props => {\r\n  const {\r\n    containerStyle,\r\n    wrapperStyle,\r\n    title,\r\n    price,\r\n    info,\r\n    button,\r\n    color,\r\n    titleFont,\r\n    pricingFont,\r\n    infoFont,\r\n    buttonFont,\r\n    onButtonPress,\r\n    ...attributes\r\n  } = props;\r\n  return (\r\n    <View\r\n      {...attributes}\r\n      style={[styles.container, containerStyle && containerStyle]}\r\n    >\r\n      <View style={[styles.wrapper, wrapperStyle && wrapperStyle]}>\r\n        <Text\r\n          style={[\r\n            styles.pricingTitle,\r\n            { color },\r\n            titleFont && { fontFamily: titleFont },\r\n          ]}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={[\r\n            styles.pricingPrice,\r\n            pricingFont && { fontFamily: pricingFont },\r\n          ]}\r\n        >\r\n          {price}\r\n        </Text>\r\n        {info.map((item, i) => {\r\n          return (\r\n            <Text\r\n              key={i}\r\n              style={[styles.pricingInfo, infoFont && { fontFamily: infoFont }]}\r\n            >\r\n              {item}\r\n            </Text>\r\n          );\r\n        })}\r\n        <Button\r\n          text={button.title}\r\n          buttonStyle={[\r\n            styles.button,\r\n            button.buttonStyle,\r\n            { backgroundColor: color },\r\n          ]}\r\n          onPress={onButtonPress}\r\n          icon={<Icon name={button.icon} size={15} color=\"white\" />}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nPricingCard.propTypes = {\r\n  containerStyle: ViewPropTypes.style,\r\n  wrapperStyle: ViewPropTypes.style,\r\n  title: PropTypes.string.isRequired,\r\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  info: PropTypes.array.isRequired,\r\n  button: PropTypes.object.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  onButtonPress: PropTypes.any,\r\n  titleFont: PropTypes.string,\r\n  pricingFont: PropTypes.string,\r\n  infoFont: PropTypes.string,\r\n  buttonFont: PropTypes.string,\r\n};\r\n\r\nPricingCard.defaultProps = {\r\n  color: colors.primary,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    margin: 15,\r\n    marginBottom: 15,\r\n    backgroundColor: 'white',\r\n    borderColor: colors.grey5,\r\n    borderWidth: 1,\r\n    padding: 15,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: 'rgba(0,0,0, .2)',\r\n        shadowOffset: { height: 1, width: 0 },\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 0.5,\r\n      },\r\n      android: {\r\n        ...elevation.one,\r\n      },\r\n      web: {\r\n        ...elevation.one,\r\n      },\r\n    }),\r\n  },\r\n  wrapper: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  pricingTitle: {\r\n    textAlign: 'center',\r\n    color: colors.primary,\r\n    fontSize: normalize(30),\r\n    ...Platform.select({\r\n      ios: {\r\n        fontWeight: '800',\r\n      },\r\n      android: {\r\n        ...fonts.android.black,\r\n      },\r\n      web: {\r\n        fontWeight: '700',\r\n      },\r\n    }),\r\n  },\r\n  pricingPrice: {\r\n    textAlign: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    fontSize: normalize(40),\r\n    ...Platform.select({\r\n      ios: {\r\n        fontWeight: '700',\r\n      },\r\n      android: {\r\n        ...fonts.android.bold,\r\n      },\r\n      web: {\r\n        fontWeight: '600',\r\n      },\r\n    }),\r\n  },\r\n  pricingInfo: {\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    color: colors.grey3,\r\n    ...Platform.select({\r\n      ios: {\r\n        fontWeight: '600',\r\n      },\r\n      android: {\r\n        ...fonts.android.bold,\r\n      },\r\n      web: {\r\n        fontWeight: '600',\r\n      },\r\n    }),\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default PricingCard;\r\n"]}