{"version":3,"sources":["../../src/rating/Rating.js"],"names":["STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","STAR_WIDTH","TYPES","star","source","color","backgroundColor","heart","rocket","bell","Rating","props","_animListener","initialRatingPct","startingValue","ratingCount","state","panResponder","rating","ratingPosAnim","Value","imageSize","onFinishRating","fractions","addListener","value","updateRating","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","onPanResponderMove","event","dx","onPanResponderRelease","e","gestureState","flattenOffset","updatePosition","setState","prevState","removeListener","type","fullWidth","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","index","styles","starContainer","ratingPos","setValue","pos","Math","ceil","toFixed","readonly","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","console","log","flexDirection","position","top","left","justifyContent","alignItems","paddingBottom","fontSize","textAlign","fontFamily","OS","fractionsType","propName","componentName","Error","propTypes","string","number","func","bool"],"mappings":"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","file":"Rating.js","sourcesContent":["/*global require:true*/\r\n/*eslint no-undef: \"error\"*/\r\n/*eslint-disable no-console */\r\nimport times from 'lodash.times';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  View,\r\n  Animated,\r\n  PanResponder,\r\n  Image,\r\n  StyleSheet,\r\n  Platform,\r\n} from 'react-native';\r\n\r\nimport Text from '../text/Text';\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\n\r\nconst STAR_IMAGE = require('./images/star.png');\r\nconst HEART_IMAGE = require('./images/heart.png');\r\nconst ROCKET_IMAGE = require('./images/rocket.png');\r\nconst BELL_IMAGE = require('./images/bell.png');\r\n\r\nconst STAR_WIDTH = 60;\r\n\r\nconst TYPES = {\r\n  star: {\r\n    source: STAR_IMAGE,\r\n    color: '#f1c40f',\r\n    backgroundColor: 'white',\r\n  },\r\n  heart: {\r\n    source: HEART_IMAGE,\r\n    color: '#e74c3c',\r\n    backgroundColor: 'white',\r\n  },\r\n  rocket: {\r\n    source: ROCKET_IMAGE,\r\n    color: '#2ecc71',\r\n    backgroundColor: 'white',\r\n  },\r\n  bell: {\r\n    source: BELL_IMAGE,\r\n    color: '#f39c12',\r\n    backgroundColor: 'white',\r\n  },\r\n};\r\n\r\nexport default class Rating extends Component {\r\n  _animListener = null;\r\n\r\n  static defaultProps = {\r\n    type: 'star',\r\n    ratingImage: require('./images/star.png'),\r\n    ratingColor: '#f1c40f',\r\n    ratingBackgroundColor: 'white',\r\n    ratingCount: 5,\r\n    imageSize: STAR_WIDTH,\r\n    onFinishRating: () => console.log('Attach a function here.'),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const initialRatingPct = props.startingValue\r\n      ? props.startingValue / props.ratingCount\r\n      : 0.5;\r\n    this.state = {\r\n      panResponder: null,\r\n      rating: initialRatingPct * props.ratingCount,\r\n      ratingPosAnim: new Animated.Value(\r\n        initialRatingPct * props.imageSize * props.ratingCount\r\n      ),\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { imageSize, onFinishRating, fractions } = this.props;\r\n    this._animListener = this.state.ratingPosAnim.addListener(({ value }) => {\r\n      this.updateRating(value);\r\n    });\r\n    const panResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        // extractOffset() is available in later versions of RN\r\n        this.state.ratingPosAnim.setOffset(this.state.rating * imageSize);\r\n      },\r\n      onPanResponderMove: Animated.event([\r\n        null,\r\n        { dx: this.state.ratingPosAnim },\r\n      ]),\r\n      onPanResponderRelease: (e, gestureState) => {\r\n        this.state.ratingPosAnim.flattenOffset();\r\n        this.updatePosition(this.state.rating);\r\n        onFinishRating(this.state.rating);\r\n      },\r\n    });\r\n    this.setState(prevState => {\r\n      return { ...prevState, panResponder };\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.ratingPosAnim.removeListener(this._animListener);\r\n  }\r\n\r\n  getPrimaryViewStyle() {\r\n    const { imageSize, ratingCount, type } = this.props;\r\n\r\n    const color = TYPES[type].color;\r\n\r\n    const fullWidth = ratingCount * imageSize;\r\n\r\n    const width = this.state.ratingPosAnim.interpolate(\r\n      {\r\n        inputRange: [0, fullWidth],\r\n        outputRange: [0, fullWidth],\r\n        extrapolate: 'clamp',\r\n      },\r\n      { useNativeDriver: true }\r\n    );\r\n\r\n    return {\r\n      backgroundColor: color,\r\n      width,\r\n      height: width ? imageSize : 0,\r\n    };\r\n  }\r\n\r\n  getSecondaryViewStyle() {\r\n    const { imageSize, ratingCount, type } = this.props;\r\n\r\n    const backgroundColor = TYPES[type].backgroundColor;\r\n\r\n    const fullWidth = ratingCount * imageSize;\r\n\r\n    const width = this.state.ratingPosAnim.interpolate(\r\n      {\r\n        inputRange: [0, fullWidth],\r\n        outputRange: [fullWidth, 0],\r\n        extrapolate: 'clamp',\r\n      },\r\n      { useNativeDriver: true }\r\n    );\r\n\r\n    return {\r\n      backgroundColor,\r\n      width,\r\n      height: width ? imageSize : 0,\r\n    };\r\n  }\r\n\r\n  renderRatings() {\r\n    const { imageSize, ratingCount, type } = this.props;\r\n    const source = TYPES[type].source;\r\n\r\n    return times(ratingCount, index => (\r\n      <View key={index} style={styles.starContainer} pointerEvents=\"none\">\r\n        <Image\r\n          source={source}\r\n          style={{ width: imageSize, height: imageSize }}\r\n          pointerEvents=\"none\"\r\n          draggable={false}\r\n        />\r\n      </View>\r\n    ));\r\n  }\r\n\r\n  updatePosition(rating) {\r\n    const { fractions, imageSize, ratingCount } = this.props;\r\n    const ratingPos = rating * imageSize;\r\n    this.state.ratingPosAnim.setValue(ratingPos);\r\n  }\r\n\r\n  updateRating(pos) {\r\n    const { fractions, imageSize, ratingCount } = this.props;\r\n    let rating = pos / imageSize;\r\n\r\n    if (rating > ratingCount) {\r\n      rating = ratingCount;\r\n    } else if (rating < 0) {\r\n      rating = 0;\r\n    }\r\n    rating = !fractions ? Math.ceil(rating) : +rating.toFixed(fractions);\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        rating,\r\n      };\r\n    });\r\n  }\r\n\r\n  displayCurrentRating() {\r\n    const { ratingCount, type, readonly } = this.props;\r\n\r\n    const color = TYPES[type].color;\r\n\r\n    return (\r\n      <View style={styles.showRatingView}>\r\n        <View style={styles.ratingView}>\r\n          <Text style={styles.ratingText}>Rating: </Text>\r\n          <Text style={[styles.currentRatingText, { color }]}>\r\n            {this.state.rating}\r\n          </Text>\r\n          <Text style={styles.maxRatingText}>/{ratingCount}</Text>\r\n        </View>\r\n        <View>\r\n          {readonly && <Text style={styles.readonlyLabel}>(readonly)</Text>}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      readonly,\r\n      type,\r\n      ratingImage,\r\n      ratingColor,\r\n      ratingBackgroundColor,\r\n      style,\r\n      showRating,\r\n    } = this.props;\r\n\r\n    if (type === 'custom') {\r\n      let custom = {\r\n        source: ratingImage,\r\n        color: ratingColor,\r\n        backgroundColor: ratingBackgroundColor,\r\n      };\r\n      TYPES.custom = custom;\r\n    }\r\n\r\n    return (\r\n      <View pointerEvents={readonly ? 'none' : 'box-none'} style={style}>\r\n        {showRating && this.displayCurrentRating()}\r\n        <View\r\n          style={styles.starsWrapper}\r\n          {...this.state.panResponder.panHandlers}\r\n        >\r\n          <View style={styles.starsInsideWrapper} pointerEvents=\"none\">\r\n            <Animated.View style={this.getPrimaryViewStyle()} />\r\n            <Animated.View style={this.getSecondaryViewStyle()} />\r\n          </View>\r\n          {this.renderRatings()}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  starsWrapper: {\r\n    flexDirection: 'row',\r\n  },\r\n  starsInsideWrapper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    flexDirection: 'row',\r\n  },\r\n  showRatingView: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 5,\r\n  },\r\n  ratingView: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 5,\r\n  },\r\n  ratingText: {\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495e',\r\n  },\r\n  readonlyLabel: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495a',\r\n  },\r\n  currentRatingText: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n  },\r\n  maxRatingText: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495e',\r\n  },\r\n});\r\n\r\nconst fractionsType = (props, propName, componentName) => {\r\n  if (props[propName]) {\r\n    const value = props[propName];\r\n    if (typeof value === 'number') {\r\n      return value >= 0 && value <= 20\r\n        ? null\r\n        : new Error(\r\n            `\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`\r\n          );\r\n    }\r\n\r\n    return new Error(\r\n      `\\`${propName}\\` in \\`${componentName}\\` must be a number`\r\n    );\r\n  }\r\n};\r\n\r\nRating.propTypes = {\r\n  type: PropTypes.string,\r\n  ratingImage: Image.propTypes.source,\r\n  ratingColor: PropTypes.string,\r\n  ratingBackgroundColor: PropTypes.string,\r\n  ratingCount: PropTypes.number,\r\n  imageSize: PropTypes.number,\r\n  onFinishRating: PropTypes.func,\r\n  showRating: PropTypes.bool,\r\n  style: ViewPropTypes.style,\r\n  readonly: PropTypes.bool,\r\n  startingValue: PropTypes.number,\r\n  fractions: fractionsType,\r\n};\r\n"]}