{"version":3,"sources":["../../src/avatar/Avatar.js"],"names":["DEFAULT_COLORS","Avatar","component","props","onPress","onLongPress","containerStyle","icon","iconStyle","source","small","medium","large","xlarge","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","activeOpacity","showEditButton","editButton","onEditPress","attributes","width","height","titleSize","iconSize","touchableProps","Component","renderUtils","editButtonProps","defaultEditButtonSize","editButtonSize","size","editButtonSizeStyle","borderRadius","editButtonIconSize","styles","style","underlayColor","iconName","iconType","iconColor","renderContent","avatar","color","name","type","create","container","backgroundColor","overlayContainer","flex","alignItems","alignSelf","justifyContent","position","top","left","right","bottom","fontSize","textAlign","select","ios","shadowColor","shadowOffset","shadowRadius","shadowOpacity","android","one","web","defaultProps","propTypes","func","number","any","bool","string","object","shape"],"mappings":"mUAAA,qC;AACA,4B;AACA;;;;;;;;;;;AAWA,8C;AACA,sD;;AAEA,mC;;AAEA,GAAMA,gBAAiB,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAAyB,MAAzB,CAAiC,MAAjC,CAAyC,MAAzC,CAAvB;;AAEA,GAAMC,QAAS,QAATA,OAAS,OAAS;;AAEpBC,SAFoB;;;;;;;;;;;;;;;;;;;;;AAuBlBC,KAvBkB,CAEpBD,SAFoB,CAGpBE,OAHoB,CAuBlBD,KAvBkB,CAGpBC,OAHoB,CAIpBC,WAJoB,CAuBlBF,KAvBkB,CAIpBE,WAJoB,CAKpBC,cALoB,CAuBlBH,KAvBkB,CAKpBG,cALoB,CAMpBC,IANoB,CAuBlBJ,KAvBkB,CAMpBI,IANoB,CAOpBC,SAPoB,CAuBlBL,KAvBkB,CAOpBK,SAPoB,CAQpBC,MARoB,CAuBlBN,KAvBkB,CAQpBM,MARoB,CASpBC,KAToB,CAuBlBP,KAvBkB,CASpBO,KAToB,CAUpBC,MAVoB,CAuBlBR,KAvBkB,CAUpBQ,MAVoB,CAWpBC,KAXoB,CAuBlBT,KAvBkB,CAWpBS,KAXoB,CAYpBC,MAZoB,CAuBlBV,KAvBkB,CAYpBU,MAZoB,CAapBC,WAboB,CAuBlBX,KAvBkB,CAapBW,WAboB,CAcpBC,OAdoB,CAuBlBZ,KAvBkB,CAcpBY,OAdoB,CAepBC,KAfoB,CAuBlBb,KAvBkB,CAepBa,KAfoB,CAgBpBC,UAhBoB,CAuBlBd,KAvBkB,CAgBpBc,UAhBoB,CAiBpBC,qBAjBoB,CAuBlBf,KAvBkB,CAiBpBe,qBAjBoB,CAkBpBC,aAlBoB,CAuBlBhB,KAvBkB,CAkBpBgB,aAlBoB,CAmBpBC,cAnBoB,CAuBlBjB,KAvBkB,CAmBpBiB,cAnBoB,CAoBpBC,UApBoB,CAuBlBlB,KAvBkB,CAoBpBkB,UApBoB,CAqBpBC,WArBoB,CAuBlBnB,KAvBkB,CAqBpBmB,WArBoB,CAsBjBC,UAtBiB,0BAuBlBpB,KAvBkB;;AAyBhBqB,KAzBgB,CAyBErB,KAzBF,CAyBhBqB,KAzBgB,CAyBTC,MAzBS,CAyBEtB,KAzBF,CAyBTsB,MAzBS;;AA2BtB,GAAIf,KAAJ,CAAW;AACTc,MAAQ,EAAR;AACAC,OAAS,EAAT;AACD,CAHD,IAGO,IAAId,MAAJ,CAAY;AACjBa,MAAQ,EAAR;AACAC,OAAS,EAAT;AACD,CAHM,IAGA,IAAIb,KAAJ,CAAW;AAChBY,MAAQ,EAAR;AACAC,OAAS,EAAT;AACD,CAHM,IAGA,IAAIZ,MAAJ,CAAY;AACjBW,MAAQ,GAAR;AACAC,OAAS,GAAT;AACD,CAHM,IAGA,IAAI,CAACD,KAAD,EAAU,CAACC,MAAf,CAAuB;AAC5BD,MAAQ,EAAR;AACAC,OAAS,EAAT;AACD,CAHM,IAGA,IAAI,CAACD,KAAL,CAAY;AACjBA,MAAQC,MAAR;AACD,CAFM,IAEA,IAAI,CAACA,MAAL,CAAa;AAClBA,OAASD,KAAT;AACD;;AAED,GAAIE,WAAYF,MAAQ,CAAxB;AACA,GAAIG,UAAWH,MAAQ,CAAvB;;AAEA,GAAII,gBAAiB,EAArB;AACA,GAAIC,4BAAJ;AACA,GAAIzB,SAAWC,WAAf,CAA4B;AAC1BwB;AACAD,eAAiB,CAAExB,eAAF,CAAWC,uBAAX,CAAwBc,2BAAxB,CAAjB;AACD;AACD,GAAIjB,SAAJ,CAAe;AACb2B,UAAY3B,SAAZ;AACA,GAAI2B,wCAAJ,CAAmC,MAAOD,gBAAeT,aAAtB;AACpC;;AAED,GAAMW,aAAc,QAAdA,YAAc,EAAM;AACxB,GAAIV,cAAJ,CAAoB;AAClB,GAAMW,6BAAuBV,UAAvB,CAAN;;AAEA,GAAMW,uBAAwB,CAACR,MAAQC,MAAT,EAAmB,CAAnB,CAAuB,CAArD;AACA,GAAMQ,gBAAiBZ,WAAWa,IAAX,EAAmBF,qBAA1C;AACA,GAAMG,qBAAsB;AAC1BX,MAAOS,cADmB;AAE1BR,OAAQQ,cAFkB;AAG1BG,aAAcH,eAAiB,CAHL,CAA5B;;AAKA,GAAMI,oBAAqBJ,eAAiB,GAA5C;;AAEA;AACE;AACE,MAAO;AACLK,OAAOjB,UADF;AAELc,mBAFK;AAGLJ,gBAAgBQ,KAHX,CADT;;AAME,cAAeR,gBAAgBS,aANjC;AAOE,QAASlB,WAPX;;AASE;AACE;AACE,KAAMe,kBADR;AAEE,KAAMN,gBAAgBU,QAFxB;AAGE,KAAMV,gBAAgBW,QAHxB;AAIE,MAAOX,gBAAgBY,SAJzB,kDADF,CATF,CADF;;;;;AAoBD;AACF,CAlCD;;AAoCA,GAAMC,eAAgB,QAAhBA,cAAgB,EAAM;AAC1B,GAAInC,MAAJ,CAAY;AACV;AACE;AACE,MAAO;AACL6B,OAAOO,MADF;AAEL9B,SAAW,CAAEqB,aAAcZ,MAAQ,CAAxB,CAFN;AAGLV,aAAeA,WAHV,CADT;;AAME,OAAQL,MANV;AAOE,UAAW,KAPb,kDADF;;;AAWD,CAZD,IAYO,IAAIO,KAAJ,CAAW;AAChB;AACE,iDAAM,MAAO,CAACsB,OAAOtB,KAAR,CAAeC,YAAcA,UAA7B,CAAb,kDAAwDD,KAAxD,CADF;;AAGD,CAJM,IAIA,IAAIT,IAAJ,CAAU;AACf;AACE;AACE,UAAWC,WAAaA,SAD1B;AAEE,MAAOD,KAAKuC,KAAL,EAAc,OAFvB;AAGE,KAAMvC,KAAKwC,IAAL,EAAa,MAHrB;AAIE,KAAMxC,KAAK2B,IAAL,EAAaP,QAJrB;AAKE,KAAMpB,KAAKyC,IAAL,EAAazC,KAAKyC,IAL1B,kDADF;;;AASD;AACF,CA5BD;;AA8BA,GAAMV,QAAS,wBAAWW,MAAX,CAAkB;AAC/BC,UAAW;AACTC,gBAAiB,aADR;AAET3B,MAAOA,KAFE;AAGTC,OAAQA,MAHC,CADoB;;AAM/BoB,OAAQ;AACNrB,MAAOA,KADD;AAENC,OAAQA,MAFF,CANuB;;AAU/B2B,iBAAkB;AAChBC,KAAM,CADU;AAEhBC,WAAY,QAFI;AAGhBH,gBAAiB,iBAHD;AAIhBI,UAAW,SAJK;AAKhBC,eAAgB,QALA;AAMhBC,SAAU,UANM;AAOhBC,IAAK,CAPW;AAQhBC,KAAM,CARU;AAShBC,MAAO,CATS;AAUhBC,OAAQ,CAVQ,CAVa;;AAsB/B7C,MAAO;AACL8B,MAAO,SADF;AAELgB,SAAUpC,SAFL;AAGLyB,gBAAiB,eAHZ;AAILY,UAAW,QAJN,CAtBwB;;AA4B/B1C;AACEoC,SAAU,UADZ;AAEEI,OAAQ,CAFV;AAGED,MAAO,CAHT;AAIEN,WAAY,QAJd;AAKEE,eAAgB,QALlB;AAMEL,gBAAiBnD,eAAe,CAAf,CANnB;AAOK,sBAASgE,MAAT,CAAgB;AACjBC,IAAK;AACHC,YAAalE,eAAe,CAAf,CADV;AAEHmE,aAAc,CAAE3C,MAAO,CAAT,CAAYC,OAAQ,CAApB,CAFX;AAGH2C,aAAc,CAHX;AAIHC,cAAe,GAJZ,CADY;;AAOjBC,QAAS,oBAAUA,OAAV,CAAkBC,GAPV;AAQjBC,IAAK,oBAAUA,GAAV,CAAcD,GARF,CAAhB,CAPL,CA5B+B,CAAlB,CAAf;;;;;AAgDA;AACE,8BAAC,SAAD;AACM3C,cADN;AAEE,MAAO;AACLU,OAAOY,SADF;AAELnC,SAAW,CAAEqB,aAAcZ,MAAQ,CAAxB,CAFN;AAGLlB,gBAAkBA,cAHb,CAFT;;AAOMiB,UAPN;;AASE;AACE,MAAO;AACLe,OAAOc,gBADF;AAELrC,SAAW,CAAEqB,aAAcZ,MAAQ,CAAxB,CAFN;AAGLN,uBAAyBA,qBAHpB,CADT;;;AAOG0B,eAPH;AAQGd,aARH,CATF,CADF;;;;AAsBD,CAtMD;;AAwMA,GAAM2C,cAAe;AACnBrD,eAAgB,KADG;AAEnBE,YAAa,IAFM;AAGnBD,WAAY;AACVa,KAAM,IADI;AAEVO,SAAU,WAFA;AAGVC,SAAU,UAHA;AAIVC,UAAW,MAJD;AAKVH,cAAexC,eAAe,CAAf,CALL;AAMVuC,MAAO,IANG,CAHO,CAArB;;;;AAaAtC,OAAOyE,SAAP,CAAmB;AACjBxE,UAAW,oBAAUyE,IADJ;AAEjBnD,MAAO,oBAAUoD,MAFA;AAGjBnD,OAAQ,oBAAUmD,MAHD;AAIjBxE,QAAS,oBAAUuE,IAJF;AAKjBtE,YAAa,oBAAUsE,IALN;AAMjBrE,eAAgB,oBAAUuE,GANT;AAOjBpE,OAAQ,mBAAMiE,SAAN,CAAgBjE,MAPP;AAQjBK,YAAa,oBAAU+D,GARN;AASjB9D,QAAS,oBAAU+D,IATF;AAUjB9D,MAAO,oBAAU+D,MAVA;AAWjB9D,WAAY,kBAAKyD,SAAL,CAAenC,KAXV;AAYjBrB,sBAAuB,oBAAU2D,GAZhB;AAajB1D,cAAe,oBAAUyD,MAbR;AAcjBrE,KAAM,oBAAUyE,MAdC;AAejBxE,UAAW,kBAAKkE,SAAL,CAAenC,KAfT;AAgBjB7B,MAAO,oBAAUoE,IAhBA;AAiBjBnE,OAAQ,oBAAUmE,IAjBD;AAkBjBlE,MAAO,oBAAUkE,IAlBA;AAmBjBjE,OAAQ,oBAAUiE,IAnBD;AAoBjB1D,eAAgB,oBAAU0D,IApBT;AAqBjBxD,YAAa,oBAAUqD,IArBN;AAsBjBtD,WAAY,oBAAU4D,KAAV,CAAgB;AAC1B/C,KAAM,oBAAU0C,MADU;AAE1BnC,SAAU,oBAAUsC,MAFM;AAG1BrC,SAAU,oBAAUqC,MAHM;AAI1BpC,UAAW,oBAAUoC,MAJK;AAK1BvC,cAAe,oBAAUuC,MALC;AAM1BxC,MAAO,wBAAcA,KANK,CAAhB,CAtBK,CAAnB;;;;AAgCAtC,OAAOwE,YAAP,CAAsBA,YAAtB,C;;AAEexE,M","file":"Avatar.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  TouchableNativeFeedback,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport elevation from '../config/elevation';\r\nimport ViewPropTypes from '../config/ViewPropTypes';\r\n\r\nimport Icon from '../icons/Icon';\r\n\r\nconst DEFAULT_COLORS = ['#000', '#333', '#555', '#888', '#aaa', '#ddd'];\r\n\r\nconst Avatar = props => {\r\n  const {\r\n    component,\r\n    onPress,\r\n    onLongPress,\r\n    containerStyle,\r\n    icon,\r\n    iconStyle,\r\n    source,\r\n    small,\r\n    medium,\r\n    large,\r\n    xlarge,\r\n    avatarStyle,\r\n    rounded,\r\n    title,\r\n    titleStyle,\r\n    overlayContainerStyle,\r\n    activeOpacity,\r\n    showEditButton,\r\n    editButton,\r\n    onEditPress,\r\n    ...attributes\r\n  } = props;\r\n\r\n  let { width, height } = props;\r\n\r\n  if (small) {\r\n    width = 34;\r\n    height = 34;\r\n  } else if (medium) {\r\n    width = 50;\r\n    height = 50;\r\n  } else if (large) {\r\n    width = 75;\r\n    height = 75;\r\n  } else if (xlarge) {\r\n    width = 150;\r\n    height = 150;\r\n  } else if (!width && !height) {\r\n    width = 34;\r\n    height = 34;\r\n  } else if (!width) {\r\n    width = height;\r\n  } else if (!height) {\r\n    height = width;\r\n  }\r\n\r\n  let titleSize = width / 2;\r\n  let iconSize = width / 2;\r\n\r\n  let touchableProps = {};\r\n  let Component = View;\r\n  if (onPress || onLongPress) {\r\n    Component = TouchableOpacity;\r\n    touchableProps = { onPress, onLongPress, activeOpacity };\r\n  }\r\n  if (component) {\r\n    Component = component;\r\n    if (Component != TouchableOpacity) delete touchableProps.activeOpacity;\r\n  }\r\n\r\n  const renderUtils = () => {\r\n    if (showEditButton) {\r\n      const editButtonProps = { ...editButton };\r\n\r\n      const defaultEditButtonSize = (width + height) / 2 / 3;\r\n      const editButtonSize = editButton.size || defaultEditButtonSize;\r\n      const editButtonSizeStyle = {\r\n        width: editButtonSize,\r\n        height: editButtonSize,\r\n        borderRadius: editButtonSize / 2,\r\n      };\r\n      const editButtonIconSize = editButtonSize * 0.8;\r\n\r\n      return (\r\n        <TouchableHighlight\r\n          style={[\r\n            styles.editButton,\r\n            editButtonSizeStyle,\r\n            editButtonProps.style,\r\n          ]}\r\n          underlayColor={editButtonProps.underlayColor}\r\n          onPress={onEditPress}\r\n        >\r\n          <View>\r\n            <Icon\r\n              size={editButtonIconSize}\r\n              name={editButtonProps.iconName}\r\n              type={editButtonProps.iconType}\r\n              color={editButtonProps.iconColor}\r\n            />\r\n          </View>\r\n        </TouchableHighlight>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (source) {\r\n      return (\r\n        <Image\r\n          style={[\r\n            styles.avatar,\r\n            rounded && { borderRadius: width / 2 },\r\n            avatarStyle && avatarStyle,\r\n          ]}\r\n          source={source}\r\n          draggable={false}\r\n        />\r\n      );\r\n    } else if (title) {\r\n      return (\r\n        <Text style={[styles.title, titleStyle && titleStyle]}>{title}</Text>\r\n      );\r\n    } else if (icon) {\r\n      return (\r\n        <Icon\r\n          iconStyle={iconStyle && iconStyle}\r\n          color={icon.color || 'white'}\r\n          name={icon.name || 'user'}\r\n          size={icon.size || iconSize}\r\n          type={icon.type && icon.type}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: 'transparent',\r\n      width: width,\r\n      height: height,\r\n    },\r\n    avatar: {\r\n      width: width,\r\n      height: height,\r\n    },\r\n    overlayContainer: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0,0,0,0.2)',\r\n      alignSelf: 'stretch',\r\n      justifyContent: 'center',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n    },\r\n    title: {\r\n      color: '#ffffff',\r\n      fontSize: titleSize,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      textAlign: 'center',\r\n    },\r\n    editButton: {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: 0,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: DEFAULT_COLORS[4],\r\n      ...Platform.select({\r\n        ios: {\r\n          shadowColor: DEFAULT_COLORS[0],\r\n          shadowOffset: { width: 1, height: 1 },\r\n          shadowRadius: 2,\r\n          shadowOpacity: 0.5,\r\n        },\r\n        android: elevation.android.one,\r\n        web: elevation.web.one,\r\n      }),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Component\r\n      {...touchableProps}\r\n      style={[\r\n        styles.container,\r\n        rounded && { borderRadius: width / 2 },\r\n        containerStyle && containerStyle,\r\n      ]}\r\n      {...attributes}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.overlayContainer,\r\n          rounded && { borderRadius: width / 2 },\r\n          overlayContainerStyle && overlayContainerStyle,\r\n        ]}\r\n      >\r\n        {renderContent()}\r\n        {renderUtils()}\r\n      </View>\r\n    </Component>\r\n  );\r\n};\r\n\r\nconst defaultProps = {\r\n  showEditButton: false,\r\n  onEditPress: null,\r\n  editButton: {\r\n    size: null,\r\n    iconName: 'mode-edit',\r\n    iconType: 'material',\r\n    iconColor: '#fff',\r\n    underlayColor: DEFAULT_COLORS[0],\r\n    style: null,\r\n  },\r\n};\r\n\r\nAvatar.propTypes = {\r\n  component: PropTypes.func,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  onPress: PropTypes.func,\r\n  onLongPress: PropTypes.func,\r\n  containerStyle: PropTypes.any,\r\n  source: Image.propTypes.source,\r\n  avatarStyle: PropTypes.any,\r\n  rounded: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  titleStyle: Text.propTypes.style,\r\n  overlayContainerStyle: PropTypes.any,\r\n  activeOpacity: PropTypes.number,\r\n  icon: PropTypes.object,\r\n  iconStyle: Text.propTypes.style,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  xlarge: PropTypes.bool,\r\n  showEditButton: PropTypes.bool,\r\n  onEditPress: PropTypes.func,\r\n  editButton: PropTypes.shape({\r\n    size: PropTypes.number,\r\n    iconName: PropTypes.string,\r\n    iconType: PropTypes.string,\r\n    iconColor: PropTypes.string,\r\n    underlayColor: PropTypes.string,\r\n    style: ViewPropTypes.style,\r\n  }),\r\n};\r\n\r\nAvatar.defaultProps = defaultProps;\r\n\r\nexport default Avatar;\r\n"]}